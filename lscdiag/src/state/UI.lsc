// UI state
import { ReduxComponent, action, selector } from 'redux-components'
{ assign } = Object

initialState = { tabs: ['i', 'o'] }

export default class UI extends ReduxComponent:
  static verbs = ['SET_LEFT_TAB', 'SET_RIGHT_TAB']

  reducer(state = initialState, action) ->
    match action.type:
      | this.SET_LEFT_TAB:
        {}~assign(state, { tabs: [action.payload, state.tabs[1]] })
      | this.SET_RIGHT_TAB:
        {}~assign(state, { tabs: [state.tabs[0], action.payload] })
      | else:
        state

  @action({isDispatcher: true})
  setLeftTab(value) -> ({type: this.SET_LEFT_TAB, payload: value})

  @action({isDispatcher: true})
  setRightTab(value) -> ({type: this.SET_RIGHT_TAB, payload: value})

  @selector({isObservable: true})
  getLeftTab(state) -> state.tabs[0]

  @selector({isObservable: true})
  getRightTab(state) -> state.tabs[1]
